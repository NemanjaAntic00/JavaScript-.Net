// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplateModels.Karta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("ProjekcijaID")
                        .HasColumnType("int");

                    b.Property<int>("Red")
                        .HasColumnType("int");

                    b.Property<int>("Sediste")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjekcijaID");

                    b.ToTable("Karte");
                });

            modelBuilder.Entity("WebTemplateModels.Projekcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaID")
                        .HasColumnType("int");

                    b.Property<int>("Sifra")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SalaID");

                    b.ToTable("Projekcije");
                });

            modelBuilder.Entity("WebTemplateModels.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrRedova")
                        .HasColumnType("int");

                    b.Property<int>("BrSedista")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("WebTemplateModels.Karta", b =>
                {
                    b.HasOne("WebTemplateModels.Projekcija", "Projekcija")
                        .WithMany("Karte")
                        .HasForeignKey("ProjekcijaID");

                    b.Navigation("Projekcija");
                });

            modelBuilder.Entity("WebTemplateModels.Projekcija", b =>
                {
                    b.HasOne("WebTemplateModels.Sala", "Sala")
                        .WithMany("Projekcije")
                        .HasForeignKey("SalaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("WebTemplateModels.Projekcija", b =>
                {
                    b.Navigation("Karte");
                });

            modelBuilder.Entity("WebTemplateModels.Sala", b =>
                {
                    b.Navigation("Projekcije");
                });
#pragma warning restore 612, 618
        }
    }
}
